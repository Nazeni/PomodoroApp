{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/pomodoro.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction TimerSettingComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵelementStart(3, \"h2\");\n    i0.ɵɵtext(4, \"Timer Setting\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function TimerSettingComponent_div_0_Template_button_click_5_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.close($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 5);\n    i0.ɵɵelementStart(7, \"div\", 6);\n    i0.ɵɵelementStart(8, \"span\");\n    i0.ɵɵtext(9, \"Time(minutes)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 7);\n    i0.ɵɵelementStart(11, \"div\", 8);\n    i0.ɵɵelementStart(12, \"label\");\n    i0.ɵɵtext(13, \"Pomodoro\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function TimerSettingComponent_div_0_Template_input_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.pSecond = $event;\n    })(\"ngModelChange\", function TimerSettingComponent_div_0_Template_input_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.pChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 8);\n    i0.ɵɵelementStart(16, \"label\");\n    i0.ɵɵtext(17, \"Short Break\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function TimerSettingComponent_div_0_Template_input_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.shortSecond = $event;\n    })(\"ngModelChange\", function TimerSettingComponent_div_0_Template_input_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.shortChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 8);\n    i0.ɵɵelementStart(20, \"label\");\n    i0.ɵɵtext(21, \"Long Break\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function TimerSettingComponent_div_0_Template_input_ngModelChange_22_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.longSecond = $event;\n    })(\"ngModelChange\", function TimerSettingComponent_div_0_Template_input_ngModelChange_22_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.longChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.pSecond);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.shortSecond);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.longSecond);\n  }\n}\n\nexport let TimerSettingComponent = /*#__PURE__*/(() => {\n  class TimerSettingComponent {\n    constructor(_pomodoroService) {\n      this._pomodoroService = _pomodoroService;\n      this.showSetting = false;\n      this.pSecond = 0;\n      this.pSecondChange = new EventEmitter();\n      this.shortSecondChange = new EventEmitter();\n      this.longSecondChange = new EventEmitter();\n      this.showSettingChange = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    ngDoCheck() {\n      console.log(\"setting changes component:\", this.showSetting);\n    }\n\n    change(newValue, sec, emit) {\n      console.log(\"newValue:\", newValue);\n      sec = newValue;\n      emit.emit(newValue);\n    }\n\n    pChange(newValue) {\n      this.change(newValue, this.pSecond, this.pSecondChange);\n    }\n\n    shortChange(newValue) {\n      this.change(newValue, this.shortSecond, this.shortSecondChange);\n    }\n\n    longChange(newValue) {\n      this.change(newValue, this.longSecond, this.longSecondChange);\n    }\n\n    close(newVal) {\n      this.showSetting = false;\n      newVal = this.showSetting;\n      this.showSettingChange.emit(newVal);\n    }\n\n  }\n\n  TimerSettingComponent.ɵfac = function TimerSettingComponent_Factory(t) {\n    return new (t || TimerSettingComponent)(i0.ɵɵdirectiveInject(i1.PomodoroService));\n  };\n\n  TimerSettingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TimerSettingComponent,\n    selectors: [[\"timer-setting\"]],\n    inputs: {\n      showSetting: \"showSetting\",\n      pSecond: \"pSecond\",\n      shortSecond: \"shortSecond\",\n      longSecond: \"longSecond\"\n    },\n    outputs: {\n      pSecondChange: \"pSecondChange\",\n      shortSecondChange: \"shortSecondChange\",\n      longSecondChange: \"longSecondChange\",\n      showSettingChange: \"showSettingChange\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"main-container\", 4, \"ngIf\"], [1, \"main-container\"], [1, \"inner-container\"], [1, \"title\"], [1, \"close-button\", \"fas\", \"fa-times\", 3, \"click\"], [1, \"change-timer\"], [1, \"time-minutes\"], [1, \"timer-inputs\"], [1, \"time-input\"], [\"type\", \"number\", \"min\", \"0\", \"value\", \"10\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"min\", \"0\", \"value\", \"15\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"min\", \"0\", \"value\", \"20\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function TimerSettingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TimerSettingComponent_div_0_Template, 23, 3, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showSetting);\n      }\n    },\n    directives: [i2.NgIf, i3.MinValidator, i3.NumberValueAccessor, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"[_nghost-%COMP%]{display:flex;justify-content:center}.main-container[_ngcontent-%COMP%]{position:fixed;width:420px;height:auto;background-color:#fff;border-radius:8px;top:70px;z-index:1;padding:15px 17px;box-sizing:border-box}.main-container[_ngcontent-%COMP%]   .inner-container[_ngcontent-%COMP%]{margin:0 auto;display:flex;flex-direction:column}.main-container[_ngcontent-%COMP%]   .inner-container[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{padding:0 5px 20px;color:#bbb;border-bottom:1px solid grey;display:flex;justify-content:space-between;text-transform:uppercase}.main-container[_ngcontent-%COMP%]   .inner-container[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{display:inline-block;font-size:16px;font-weight:700}.main-container[_ngcontent-%COMP%]   .inner-container[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]   .close-button[_ngcontent-%COMP%]{border:none;background-color:unset;font-size:24px;color:#b3b3b3}.main-container[_ngcontent-%COMP%]   .inner-container[_ngcontent-%COMP%]   .change-timer[_ngcontent-%COMP%]{padding:0 0 20px;color:#bbb;font-weight:700}.main-container[_ngcontent-%COMP%]   .inner-container[_ngcontent-%COMP%]   .change-timer[_ngcontent-%COMP%]   .time-minutes[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#3b3a3a}.main-container[_ngcontent-%COMP%]   .inner-container[_ngcontent-%COMP%]   .change-timer[_ngcontent-%COMP%]   .timer-inputs[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.main-container[_ngcontent-%COMP%]   .inner-container[_ngcontent-%COMP%]   .change-timer[_ngcontent-%COMP%]   .timer-inputs[_ngcontent-%COMP%]   .time-input[_ngcontent-%COMP%]{width:25%}.main-container[_ngcontent-%COMP%]   .inner-container[_ngcontent-%COMP%]   .change-timer[_ngcontent-%COMP%]   .timer-inputs[_ngcontent-%COMP%]   .time-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;height:40px;border-radius:4px;border:none;background-color:#efefef}\"]\n  });\n  return TimerSettingComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}