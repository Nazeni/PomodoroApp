{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild, HostListener } from '@angular/core';\nimport { Pomodoro } from '../pomodoro-card/pomodoro.model';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { moveItemInArray } from '@angular/cdk/drag-drop';\nlet MainLayoutComponent = class MainLayoutComponent {\n  constructor(pomodoroService) {\n    this.pomodoroService = pomodoroService;\n    this.showAddForm = false;\n    this.showTasksDropdown = false;\n    this.openNotearea = false;\n    this.est = 0;\n    this.estCount = 0;\n    this.totalAct = 0;\n    this.pomodoros = new Array();\n    this.showResults = false;\n    this.showSetting = false;\n    this.turn = 0;\n    this.pSecond = 1;\n    this.shortSecond = 5;\n    this.longSecond = 10; //let d = new Date();\n    //this.finishTime = d.getHours() + \":\" + d.getMinutes();\n\n    console.log(\"show storage:\");\n    this.selectedPomodoro = this.pomodoros[0];\n  }\n\n  onDocumentClick($event) {\n    $event.stopPropagation(); //this.showAddForm = true; \n\n    this.showTasksDropdown = false;\n    console.log(\"none\");\n  }\n\n  ngOnInit() {\n    this.pomodoro = new Pomodoro();\n    this.pomodoros = this.pomodoroService.getPomodoros();\n    this.pomodoro.est = 1;\n    this.pomodoro.act = 0;\n    this.pomodoro.isDone = false;\n    this.showEditForm = false;\n    this.getTitle();\n  } // ngOnInit(): void {\n  //   this.pomodoro = new Pomodoro();\n  //   this.pomodoroService.getPomodoros()\n  //     .subscribe(\n  //       (data: Pomodoro[]) => this.pomodoros = data,\n  //       (err: any) => console.log(err),\n  //       () => console.log('All done getting pomodoros')\n  //     )\n  //   //this.pomodoros = this.pomodoroService.getPomodoros();\n  //   this.pomodoro.est = 1;\n  //   this.pomodoro.act = 0;\n  //   this.pomodoro.isDone = false;\n  //   this.showEditForm = false;\n  //   this.getTitle();\n  // }  / can i take your code on my machin \n\n\n  ngDoCheck() {\n    this.results();\n    console.log('show results');\n    console.log(\"newV:\", this.pSecond);\n    console.log(\"setting chane:\", this.showSetting);\n    console.log(\"totalAct change in Main component:\", this.totalAct);\n  }\n\n  getActChange(data) {\n    this.totalAct = data;\n    this.selectedPomodoro.act += 1;\n    this.turn += 1;\n  }\n\n  add() {\n    this.showAddForm = true;\n  }\n\n  onFormSubmit(pomodoroForm) {\n    console.log(pomodoroForm);\n    this.setFinishTime(); // is not working after 3rd time\n\n    this.pomodoroService.addPomodoros(pomodoroForm.value); //let newPomodoro: Pomodoro = <any>pomodoroForm.value;\n    //this.pomodoroService.addPomodoros(newPomodoro)\n    //.subscribe();\n\n    this.estCount = Number(this.estCount) + Number(this.pomodoro.est);\n    console.log('estValue', this.pomodoro.est);\n    pomodoroForm.controls['est'].setValue('1');\n    pomodoroForm.controls['title'].reset();\n    if (this.openNotearea) pomodoroForm.controls['note'].reset();\n    this.openNotearea = false;\n  } //-------------------------------------------------------------------------------------------\n\n\n  setFinishTime() {\n    let d = new Date();\n    let ti = d.getHours() * 60 + d.getMinutes();\n    console.log(\"NAZ test 1, time\", ti);\n\n    if (this.pomodoros.length > 0) {\n      ti = ti + (this.shortSecond + this.longSecond);\n      this.time = ti;\n      console.log(\"NAZ test if , time\", this.time);\n    }\n\n    ti += this.pSecond;\n    this.time = ti;\n    console.log(\"NAZ test else, time\", this.time);\n    console.log(\"NAZ test 2, time\", this.time, this.pSecond, this.shortSecond, this.longSecond); //if (this.pomodoros.length === 0) {\n    //   let setMinute = t.getMinutes() + this.timer.second;\n    //   this.setMinuteFunc(setMinute, x);\n    // } else if (this.pomodoros.length > 0) {\n    //   let setMinute = t.getMinutes() + this.timer.second + 5 + 10;\n    //   this.setMinuteFunc(setMinute, x);\n    //   //this.finishTime = t.getHours() + \":\" + (t.getMinutes() + this.timer.minute + 5 + 10) //added short break time and long break time \n    //   console.log('finishtime when there is pomodoro', this.finishTime);\n    // }\n    //}\n    // setMinuteFunc(minute: any, hour: number) {\n    //   if (minute >= 60) {\n    //     hour += 1;\n    //     minute = minute - 60;\n    //     this.finishTime = hour + \":\" + minute;\n    //     console.log('finishtime when there is no pomodoro', this.finishTime);\n    //   } else {\n    //     this.finishTime = hour + \":\" + minute;\n    //   }\n  } //----------------------------------------------------------------------------------------------------------\n\n\n  showDropdown($event) {\n    $event.stopPropagation();\n    this.showTasksDropdown = !this.showTasksDropdown;\n  }\n\n  clearAllTasks() {\n    this.pomodoroService.clearPomodoros(this.pomodoros);\n    this.est = 0;\n    console.log(\"clear all\");\n  }\n\n  clearFinishedTasks() {\n    this.pomodoros = this.pomodoroService.clearIsDone(this.pomodoros);\n    console.log(\"clear finished tasks\", this.pomodoros);\n  }\n\n  markedPomodoro(data) {\n    this.isDone = data;\n    console.log(\"recieved data\", data);\n  }\n\n  getEstCount(data) {\n    this.est = data;\n    console.log('est Count data', data);\n    console.log('est ', this.est);\n\n    if (this.isDone === true) {\n      this.estCount = +this.estCount - +this.est;\n    } else {\n      this.estCount = +this.estCount + this.est;\n    }\n\n    console.log('est Count ', this.estCount);\n  }\n\n  onSelect(pomodoro) {\n    this.selectedPomodoro = pomodoro;\n    this.getTitle();\n    console.log('selected pomodoro', this.selectedPomodoro);\n  }\n\n  getTitle() {\n    this.selectedPomodoro ? this.item = this.selectedPomodoro.title : this.item = \"Time to focus\";\n    console.log('hii');\n  }\n\n  results() {\n    this.pomodoros.length !== 0 ? this.showResults = true : this.showResults = false;\n    console.log(\" Show Results\", this.showResults);\n  }\n\n  openSetting() {\n    this.showSetting = true;\n  }\n\n  getActDone(data) {\n    this.totalAct = data;\n  }\n\n  drop(event) {\n    moveItemInArray(this.pomodoros, event.previousIndex, event.currentIndex);\n  }\n\n};\n\n__decorate([ViewChild('dropDown')], MainLayoutComponent.prototype, \"el\", void 0);\n\n__decorate([ViewChild('timer')], MainLayoutComponent.prototype, \"timer\", void 0);\n\n__decorate([HostListener('document:click', ['$event'])], MainLayoutComponent.prototype, \"onDocumentClick\", null);\n\nMainLayoutComponent = __decorate([Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss'],\n  animations: [trigger('openAddForm', [transition(':enter', [style({\n    transform: 'translate(0, -20%)'\n  }), animate('50ms')]), transition(':leave', [animate('50ms', style({\n    transform: 'translate(0, 20%)'\n  }))])])]\n})], MainLayoutComponent);\nexport { MainLayoutComponent };","map":null,"metadata":{},"sourceType":"module"}